name: Build And Deploy Spring Boot App
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  
jobs:
  test:
    runs-on: ubuntu-latest
    environment: testing
    env:
        DB_URL: ${{ vars.DB_URL }}
        DB_USERNAME:  ${{ secrets.DB_USERNAME }}
        DB_PASSWORD:  ${{ secrets.DB_PASSWORD }}
        PROFILE: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Cache maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
            
      - name: Test with Maven
        id: teststep
        continue-on-error: true
        run: mvn clean test
        working-directory: demo
        
      - name: Upload JaCoCo Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-data
          path: |
            ./demo/target/jacoco.exec
            ./demo/target/classes/
            ./demo/target/test-classes/
            
      - name: Fail job if test failed
        if: steps.teststep.outcome == 'failure'
        run: exit 1
     
  build:
    needs: test
    runs-on: ubuntu-latest
    environment: production
    env:
        DB_URL: ${{ vars.DB_URL }}
        DB_USERNAME:  ${{ secrets.DB_USERNAME }}
        DB_PASSWORD:  ${{ secrets.DB_PASSWORD }}
        PROFILE: prod
    outputs:
      script-file: ${{ steps.publish.outputs.script-file }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Cache maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2  # the path like ~/ telling github that this folder should be store somewhere in githubcloud so that it can be accessible in other jobs/workflow execution
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-    
            
      - name: Download JaCoCo Artifacts
        uses: actions/download-artifact@v4
        with:
          name: jacoco-data
          path: ./demo/target/      
          
      - name: Show working directory and files
        run: |
          pwd
          ls -R
          
      - name: Build with maven
        id: coveragecheck
        run: mvn verify -DskipTests
        working-directory: demo
        
      - name: Upload Test Coverage Report
        if:  steps.coveragecheck.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-failed-report
          path: ./target/site/jacoco/
        
      - name: Publish properties file name
        id: publish
        run: find ./demo/target/classes/*.properties -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'
        
      - name: Archive JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: springboot-jar
          path: ./demo/target/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v4
        with:
          name: springboot-jar
          
      - name: Output contents
        run: ls
        
      - name: Output filename
        run: echo "${{ needs.build.outputs.script-file }}"
        
      - name: Deploy
        run: echo "Deploying...."




